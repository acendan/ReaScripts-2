--[[
 * ReaScript Name: Random Velocity - GUI
 * Version: 1.0.3
 * Author: zaibuyidao
 * Author URI: https://www.soundengine.cn/user/%E5%86%8D%E8%A3%9C%E4%B8%80%E5%88%80
 * Repository: GitHub > zaibuyidao > ReaScripts
 * Repository URI: https://github.com/zaibuyidao/ReaScripts
 * REAPER: 6.0
--]]

--[[
 * Changelog:
 * v1.0 (2021-1-27)
  + Initial release
--]]

-- Script generated by Lokasenna's GUI Builder

function Msg(param)
  reaper.ShowConsoleMsg(tostring(param) .. "\n")
end

os = reaper.GetOS()
if os ~= "Win32" and os ~= "Win64" then
  loadfile(reaper.GetResourcePath() .. "/Scripts/zaibuyidao Scripts/Development/Lokasenna_GUI Library/Set Lokasenna_GUI library.lua")()
else
  loadfile(reaper.GetResourcePath() .. "\\Scripts\\zaibuyidao Scripts\\Development\\Lokasenna_GUI Library\\Set Lokasenna_GUI library.lua")()
end

local lib_path = reaper.GetExtState("GUILibrary", "lib_path_v2")
if not lib_path or lib_path == "" then
  reaper.MB("Couldn't load the Lokasenna_GUI library. Please install 'Get Lokasenna_GUI library', available on ReaPack, then run the 'Set Lokasenna_GUI library.lua' script in your Action List.", "Whoops!", 0)
  return
end
loadfile(lib_path .. "Core.lua")()

GUI.req("Classes/Class - Slider.lua")()
GUI.req("Classes/Class - Button.lua")()
-- If any of the requested libraries weren't found, abort the script.
if missing_lib then return 0 end

GUI.name = "Random Velocity"
GUI.x, GUI.y, GUI.w, GUI.h = 0, 0, 384, 114
GUI.anchor, GUI.corner = "mouse", "C"

function randVelo()
  local take = reaper.MIDIEditor_GetTake(reaper.MIDIEditor_GetActive())
  local _, notecnt, _, _ = reaper.MIDI_CountEvts(take)

  local cnt, index = 0, {}
  local val = reaper.MIDI_EnumSelNotes(take, -1)
  while val ~= - 1 do
    cnt = cnt + 1
    index[cnt] = val
    val = reaper.MIDI_EnumSelNotes(take, val)
  end

  local val_t = GUI.Val("Slider1")
  local min_val = val_t[1]
  local max_val = val_t[2]
  if min_val == max_val then return end
  min_val = min_val - 1
  local diff = max_val - min_val

  reaper.MIDI_DisableSort(take)

  if #index > 0 then
    for i = 1,  #index do
      local retval, selected, muted, startppqpos, endppqpos, chan, pitch, vel = reaper.MIDI_GetNote(take, index[i])
      vel = tonumber(min_val + math.random(diff))
      reaper.MIDI_SetNote(take, index[i], selected, muted, startppqpos, endppqpos, chan, pitch, vel, false)
    end
  else
    for i = 0,  notecnt-1 do
      local retval, selected, muted, startppqpos, endppqpos, chan, pitch, vel = reaper.MIDI_GetNote(take, i)
      vel = tonumber(min_val + math.random(diff))
      reaper.MIDI_SetNote(take, i, selected, muted, startppqpos, endppqpos, chan, pitch, vel, false)
    end
  end

  reaper.MIDI_Sort(take)
  reaper.UpdateArrange()
end

GUI.New("Slider1", "Slider", {
  z = 1,
  x = 32,
  y = 32,
  w = 320,
  caption = "Limit range",
  min = 1,
  max = 127,
  defaults = {0, 126},
  inc = 1,
  dir = "h",
  font_a = 3,
  font_b = 4,
  col_txt = "txt",
  col_fill = "elm_fill",
  bg = "wnd_bg",
  show_handles = true,
  show_values = true,
  cap_x = 0,
  cap_y = 0,
})

GUI.New("Button1", "Button", {
  z = 1,
  x = 160,
  y = 72,
  w = 64,
  h = 24,
  caption = "OK",
  font = 3,
  col_txt = "txt",
  col_fill = "elm_frame",
  func = randVelo
})

GUI.Init()

if reaper.APIExists("JS_Window_Find") then
  hwnd = reaper.JS_Window_Find(GUI.name, true)
  if hwnd then reaper.JS_Window_AttachTopmostPin(hwnd) end
else
  reaper.MB("Please right-click and install 'js_ReaScriptAPI: API functions for ReaScripts'. Then restart REAPER and run the script again. Thank you!\n\n請右鍵單擊並安裝 'js_ReaScriptAPI: API functions for ReaScripts'。然後重新啟動 REAPER 並再次運行腳本。謝謝！", "你必須安裝 JS_ReaScriptAPI", 0)
  local ok, err = reaper.ReaPack_AddSetRepository("ReaTeam Extensions", "https://github.com/ReaTeam/Extensions/raw/master/index.xml", true, 1)
  if ok then
    reaper.ReaPack_BrowsePackages("js_ReaScriptAPI")
  else
    reaper.MB(err, "錯誤", 0)
  end
  return reaper.defer(function() end)
end

GUI.Main()
