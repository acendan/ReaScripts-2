--[[
 * ReaScript Name: Random CC Value - GUI
 * Version: 1.0
 * Author: zaibuyidao
 * Author URI: https://www.soundengine.cn/user/%E5%86%8D%E8%A3%9C%E4%B8%80%E5%88%80
 * Repository: GitHub > zaibuyidao > ReaScripts
 * Repository URI: https://github.com/zaibuyidao/ReaScripts
 * REAPER: 6.0
--]]

--[[
 * Changelog:
 * v1.0 (2021-1-27)
  + Initial release
--]]

-- Script generated by Lokasenna's GUI Builder

function Msg(param)
  reaper.ShowConsoleMsg(tostring(param) .. "\n")
end

local lib_path = reaper.GetExtState("Lokasenna_GUI", "lib_path_v2")
if not lib_path or lib_path == "" then
  reaper.MB("Couldn't load the Lokasenna_GUI library. Please install 'Lokasenna's GUI library v2 for Lua', available on ReaPack, then run the 'Set Lokasenna_GUI v2 library path.lua' script in your Action List.", "Whoops!", 0)
  return
end
loadfile(lib_path .. "Core.lua")()

GUI.req("Classes/Class - Slider.lua")()
GUI.req("Classes/Class - Button.lua")()
-- If any of the requested libraries weren't found, abort the script.
if missing_lib then return 0 end

GUI.name = "Random CC Value"
GUI.x, GUI.y, GUI.w, GUI.h = 0, 0, 384, 168
GUI.anchor, GUI.corner = "mouse", "C"

function randCC()
  local take = reaper.MIDIEditor_GetTake(reaper.MIDIEditor_GetActive())
  local _, _, ccevtcnt, _ = reaper.MIDI_CountEvts(take)

  local cnt, index = 0, {}
  local val = reaper.MIDI_EnumSelCC(take, -1)
  while val ~= - 1 do
    cnt = cnt + 1
    index[cnt] = val
    val = reaper.MIDI_EnumSelCC(take, val)
  end

  local val_t = GUI.Val("Slider1")
  local ccnumber = GUI.Val("Slider2")
  local min_val = val_t[1]
  local max_val = val_t[2]
  if min_val == max_val then return end
  min_val = min_val - 1
  local diff = max_val - min_val

  reaper.MIDI_DisableSort(take)
  
  if #index > 0 then
    for i = 1,  #index do
      local retval, selected, muted, ppqpos, chanmsg, chan, msg2, msg3 = reaper.MIDI_GetCC(take, index[i])
      msg3 = tonumber(min_val + math.random(diff))
      reaper.MIDI_SetCC(take, index[i], nil, nil, nil, nil, nil, nil, msg3, false)
    end
  else
    for i = 0,  ccevtcnt-1 do
      local retval, selected, muted, ppqpos, chanmsg, chan, msg2, msg3 = reaper.MIDI_GetCC(take, i)
      msg3 = tonumber(min_val + math.random(diff))
      if msg2 == ccnumber then
        reaper.MIDI_SetCC(take, i, nil, nil, nil, nil, nil, msg2, msg3, false)
      end
    end
  end

  reaper.MIDI_Sort(take)
  reaper.UpdateArrange()
end

GUI.New("Slider1", "Slider", {
  z = 1,
  x = 32,
  y = 32,
  w = 320,
  caption = "Limit range",
  min = 0,
  max = 127,
  defaults = {0, 127},
  inc = 1,
  dir = "h",
  font_a = 3,
  font_b = 4,
  col_txt = "txt",
  col_fill = "elm_fill",
  bg = "wnd_bg",
  show_handles = true,
  show_values = true,
  cap_x = 0,
  cap_y = 0,
})

GUI.New("Slider2", "Slider", {
  z = 1,
  x = 32,
  y = 88,
  w = 320,
  caption = "Filter CC number (When no event is selected)",
  min = 0,
  max = 127,
  defaults = 11,
  inc = 1,
  dir = "h",
  font_a = 3,
  font_b = 4,
  col_txt = "txt",
  col_fill = "elm_fill",
  bg = "wnd_bg",
  show_handles = true,
  show_values = true,
  cap_x = 0,
  cap_y = 0,
})

GUI.New("Button1", "Button", {
  z = 1,
  x = 160,
  y = 128,
  w = 64,
  h = 24,
  caption = "OK",
  font = 3,
  col_txt = "txt",
  col_fill = "elm_frame",
  func = randCC
})


GUI.Init()
GUI.Main()
